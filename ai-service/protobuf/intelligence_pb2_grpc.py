# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from protobuf import intelligence_pb2 as protobuf_dot_intelligence__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in protobuf/intelligence_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class IntelligenceStub(object):
    """Service defining comprehensive AI-powered testimonial processing
    Core Enhancement & Analysis Services
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EnhanceTestimonial = channel.unary_unary(
                '/intelligence.Intelligence/EnhanceTestimonial',
                request_serializer=protobuf_dot_intelligence__pb2.EnhanceTestimonialRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.EnhanceTestimonialResponse.FromString,
                _registered_method=True)
        self.AnalyzeSentiment = channel.unary_unary(
                '/intelligence.Intelligence/AnalyzeSentiment',
                request_serializer=protobuf_dot_intelligence__pb2.AnalyzeSentimentRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.AnalyzeSentimentResponse.FromString,
                _registered_method=True)
        self.DetectFakeTestimonial = channel.unary_unary(
                '/intelligence.Intelligence/DetectFakeTestimonial',
                request_serializer=protobuf_dot_intelligence__pb2.DetectFakeTestimonialRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.DetectFakeTestimonialResponse.FromString,
                _registered_method=True)
        self.GenerateStoryFromTestimonials = channel.unary_unary(
                '/intelligence.Intelligence/GenerateStoryFromTestimonials',
                request_serializer=protobuf_dot_intelligence__pb2.GenerateStoryRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.GenerateStoryResponse.FromString,
                _registered_method=True)
        self.TranslateTestimonial = channel.unary_unary(
                '/intelligence.Intelligence/TranslateTestimonial',
                request_serializer=protobuf_dot_intelligence__pb2.TranslateTestimonialRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.TranslateTestimonialResponse.FromString,
                _registered_method=True)
        self.GenerateVideoTestimonial = channel.unary_unary(
                '/intelligence.Intelligence/GenerateVideoTestimonial',
                request_serializer=protobuf_dot_intelligence__pb2.GenerateVideoTestimonialRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.GenerateVideoTestimonialResponse.FromString,
                _registered_method=True)
        self.GenerateVoiceTestimonial = channel.unary_unary(
                '/intelligence.Intelligence/GenerateVoiceTestimonial',
                request_serializer=protobuf_dot_intelligence__pb2.GenerateVoiceTestimonialRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.GenerateVoiceTestimonialResponse.FromString,
                _registered_method=True)
        self.BenchmarkAgainstCompetitors = channel.unary_unary(
                '/intelligence.Intelligence/BenchmarkAgainstCompetitors',
                request_serializer=protobuf_dot_intelligence__pb2.BenchmarkRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.BenchmarkResponse.FromString,
                _registered_method=True)
        self.GenerateAIJourneyMap = channel.unary_unary(
                '/intelligence.Intelligence/GenerateAIJourneyMap',
                request_serializer=protobuf_dot_intelligence__pb2.JourneyMapRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.JourneyMapResponse.FromString,
                _registered_method=True)
        self.GenerateAIProductDemo = channel.unary_unary(
                '/intelligence.Intelligence/GenerateAIProductDemo',
                request_serializer=protobuf_dot_intelligence__pb2.ProductDemoRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.ProductDemoResponse.FromString,
                _registered_method=True)
        self.GenerateAIROIPredictor = channel.unary_unary(
                '/intelligence.Intelligence/GenerateAIROIPredictor',
                request_serializer=protobuf_dot_intelligence__pb2.ROIPredictorRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.ROIPredictorResponse.FromString,
                _registered_method=True)
        self.GenerateAIMicrosite = channel.unary_unary(
                '/intelligence.Intelligence/GenerateAIMicrosite',
                request_serializer=protobuf_dot_intelligence__pb2.MicrositeRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.MicrositeResponse.FromString,
                _registered_method=True)
        self.GenerateSalesConversation = channel.unary_unary(
                '/intelligence.Intelligence/GenerateSalesConversation',
                request_serializer=protobuf_dot_intelligence__pb2.SalesConversationRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.SalesConversationResponse.FromString,
                _registered_method=True)
        self.AnalyzeEmotionalResonance = channel.unary_unary(
                '/intelligence.Intelligence/AnalyzeEmotionalResonance',
                request_serializer=protobuf_dot_intelligence__pb2.EmotionalResonanceRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.EmotionalResonanceResponse.FromString,
                _registered_method=True)
        self.AnalyzeCompetitiveDifferentiators = channel.unary_unary(
                '/intelligence.Intelligence/AnalyzeCompetitiveDifferentiators',
                request_serializer=protobuf_dot_intelligence__pb2.CompetitiveDiffRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.CompetitiveDiffResponse.FromString,
                _registered_method=True)
        self.SynthesizeMultimodalTestimonial = channel.unary_unary(
                '/intelligence.Intelligence/SynthesizeMultimodalTestimonial',
                request_serializer=protobuf_dot_intelligence__pb2.MultimodalRequest.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.MultimodalResponse.FromString,
                _registered_method=True)
        self.ChatStream = channel.stream_stream(
                '/intelligence.Intelligence/ChatStream',
                request_serializer=protobuf_dot_intelligence__pb2.ChatMessage.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.ChatResponse.FromString,
                _registered_method=True)
        self.ProcessVideoByChunks = channel.stream_unary(
                '/intelligence.Intelligence/ProcessVideoByChunks',
                request_serializer=protobuf_dot_intelligence__pb2.VideoChunk.SerializeToString,
                response_deserializer=protobuf_dot_intelligence__pb2.VideoSummary.FromString,
                _registered_method=True)


class IntelligenceServicer(object):
    """Service defining comprehensive AI-powered testimonial processing
    Core Enhancement & Analysis Services
    """

    def EnhanceTestimonial(self, request, context):
        """Enhances testimonials by improving clarity, grammar, and emotional impact while 
        preserving authenticity
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnalyzeSentiment(self, request, context):
        """Performs comprehensive sentiment analysis including customer satisfaction scoring,
        key pain points, and improvement suggestions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetectFakeTestimonial(self, request, context):
        """Trust & Authenticity

        Advanced fake review detection using multi-modal analysis (text patterns, metadata, 
        user behavior)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateStoryFromTestimonials(self, request, context):
        """Transforms testimonials into compelling success stories with business impact metrics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TranslateTestimonial(self, request, context):
        """Global Reach & Accessibility

        Context-aware translation that preserves emotional nuance and cultural relevance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateVideoTestimonial(self, request, context):
        """Advanced Content Generation

        Creates dynamic video testimonials with AI-generated avatars, expressions, and 
        voice synchronization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateVoiceTestimonial(self, request, context):
        """Generates natural-sounding voice testimonials with emotion-aware voice modulation
        Analytics & Insights
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BenchmarkAgainstCompetitors(self, request, context):
        """Real-time competitor testimonial analysis and benchmarking
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateAIJourneyMap(self, request, context):
        """AI-powered journey mapping and visualization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateAIProductDemo(self, request, context):
        """Personalized demo generation using testimonial insights
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateAIROIPredictor(self, request, context):
        """AI-driven ROI prediction and visualization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateAIMicrosite(self, request, context):
        """Creates personalized microsites using AI content generation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateSalesConversation(self, request, context):
        """AI-powered sales conversation generator
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnalyzeEmotionalResonance(self, request, context):
        """Emotional resonance analyzer and optimizer
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnalyzeCompetitiveDifferentiators(self, request, context):
        """AI competitive differentiator analysis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SynthesizeMultimodalTestimonial(self, request, context):
        """Multimodal testimonial synthesis (text, audio, video)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChatStream(self, request_iterator, context):
        """A bidirectional streaming RPC: both client and server send streams of messages.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessVideoByChunks(self, request_iterator, context):
        """A client-side streaming RPC: the client sends a stream of VideoChunk
        messages and then waits for a single VideoSummary response.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IntelligenceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EnhanceTestimonial': grpc.unary_unary_rpc_method_handler(
                    servicer.EnhanceTestimonial,
                    request_deserializer=protobuf_dot_intelligence__pb2.EnhanceTestimonialRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.EnhanceTestimonialResponse.SerializeToString,
            ),
            'AnalyzeSentiment': grpc.unary_unary_rpc_method_handler(
                    servicer.AnalyzeSentiment,
                    request_deserializer=protobuf_dot_intelligence__pb2.AnalyzeSentimentRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.AnalyzeSentimentResponse.SerializeToString,
            ),
            'DetectFakeTestimonial': grpc.unary_unary_rpc_method_handler(
                    servicer.DetectFakeTestimonial,
                    request_deserializer=protobuf_dot_intelligence__pb2.DetectFakeTestimonialRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.DetectFakeTestimonialResponse.SerializeToString,
            ),
            'GenerateStoryFromTestimonials': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateStoryFromTestimonials,
                    request_deserializer=protobuf_dot_intelligence__pb2.GenerateStoryRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.GenerateStoryResponse.SerializeToString,
            ),
            'TranslateTestimonial': grpc.unary_unary_rpc_method_handler(
                    servicer.TranslateTestimonial,
                    request_deserializer=protobuf_dot_intelligence__pb2.TranslateTestimonialRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.TranslateTestimonialResponse.SerializeToString,
            ),
            'GenerateVideoTestimonial': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateVideoTestimonial,
                    request_deserializer=protobuf_dot_intelligence__pb2.GenerateVideoTestimonialRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.GenerateVideoTestimonialResponse.SerializeToString,
            ),
            'GenerateVoiceTestimonial': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateVoiceTestimonial,
                    request_deserializer=protobuf_dot_intelligence__pb2.GenerateVoiceTestimonialRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.GenerateVoiceTestimonialResponse.SerializeToString,
            ),
            'BenchmarkAgainstCompetitors': grpc.unary_unary_rpc_method_handler(
                    servicer.BenchmarkAgainstCompetitors,
                    request_deserializer=protobuf_dot_intelligence__pb2.BenchmarkRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.BenchmarkResponse.SerializeToString,
            ),
            'GenerateAIJourneyMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAIJourneyMap,
                    request_deserializer=protobuf_dot_intelligence__pb2.JourneyMapRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.JourneyMapResponse.SerializeToString,
            ),
            'GenerateAIProductDemo': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAIProductDemo,
                    request_deserializer=protobuf_dot_intelligence__pb2.ProductDemoRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.ProductDemoResponse.SerializeToString,
            ),
            'GenerateAIROIPredictor': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAIROIPredictor,
                    request_deserializer=protobuf_dot_intelligence__pb2.ROIPredictorRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.ROIPredictorResponse.SerializeToString,
            ),
            'GenerateAIMicrosite': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAIMicrosite,
                    request_deserializer=protobuf_dot_intelligence__pb2.MicrositeRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.MicrositeResponse.SerializeToString,
            ),
            'GenerateSalesConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateSalesConversation,
                    request_deserializer=protobuf_dot_intelligence__pb2.SalesConversationRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.SalesConversationResponse.SerializeToString,
            ),
            'AnalyzeEmotionalResonance': grpc.unary_unary_rpc_method_handler(
                    servicer.AnalyzeEmotionalResonance,
                    request_deserializer=protobuf_dot_intelligence__pb2.EmotionalResonanceRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.EmotionalResonanceResponse.SerializeToString,
            ),
            'AnalyzeCompetitiveDifferentiators': grpc.unary_unary_rpc_method_handler(
                    servicer.AnalyzeCompetitiveDifferentiators,
                    request_deserializer=protobuf_dot_intelligence__pb2.CompetitiveDiffRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.CompetitiveDiffResponse.SerializeToString,
            ),
            'SynthesizeMultimodalTestimonial': grpc.unary_unary_rpc_method_handler(
                    servicer.SynthesizeMultimodalTestimonial,
                    request_deserializer=protobuf_dot_intelligence__pb2.MultimodalRequest.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.MultimodalResponse.SerializeToString,
            ),
            'ChatStream': grpc.stream_stream_rpc_method_handler(
                    servicer.ChatStream,
                    request_deserializer=protobuf_dot_intelligence__pb2.ChatMessage.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.ChatResponse.SerializeToString,
            ),
            'ProcessVideoByChunks': grpc.stream_unary_rpc_method_handler(
                    servicer.ProcessVideoByChunks,
                    request_deserializer=protobuf_dot_intelligence__pb2.VideoChunk.FromString,
                    response_serializer=protobuf_dot_intelligence__pb2.VideoSummary.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'intelligence.Intelligence', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('intelligence.Intelligence', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Intelligence(object):
    """Service defining comprehensive AI-powered testimonial processing
    Core Enhancement & Analysis Services
    """

    @staticmethod
    def EnhanceTestimonial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/EnhanceTestimonial',
            protobuf_dot_intelligence__pb2.EnhanceTestimonialRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.EnhanceTestimonialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AnalyzeSentiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/AnalyzeSentiment',
            protobuf_dot_intelligence__pb2.AnalyzeSentimentRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.AnalyzeSentimentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DetectFakeTestimonial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/DetectFakeTestimonial',
            protobuf_dot_intelligence__pb2.DetectFakeTestimonialRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.DetectFakeTestimonialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateStoryFromTestimonials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/GenerateStoryFromTestimonials',
            protobuf_dot_intelligence__pb2.GenerateStoryRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.GenerateStoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TranslateTestimonial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/TranslateTestimonial',
            protobuf_dot_intelligence__pb2.TranslateTestimonialRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.TranslateTestimonialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateVideoTestimonial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/GenerateVideoTestimonial',
            protobuf_dot_intelligence__pb2.GenerateVideoTestimonialRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.GenerateVideoTestimonialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateVoiceTestimonial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/GenerateVoiceTestimonial',
            protobuf_dot_intelligence__pb2.GenerateVoiceTestimonialRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.GenerateVoiceTestimonialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BenchmarkAgainstCompetitors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/BenchmarkAgainstCompetitors',
            protobuf_dot_intelligence__pb2.BenchmarkRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.BenchmarkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateAIJourneyMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/GenerateAIJourneyMap',
            protobuf_dot_intelligence__pb2.JourneyMapRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.JourneyMapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateAIProductDemo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/GenerateAIProductDemo',
            protobuf_dot_intelligence__pb2.ProductDemoRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.ProductDemoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateAIROIPredictor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/GenerateAIROIPredictor',
            protobuf_dot_intelligence__pb2.ROIPredictorRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.ROIPredictorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateAIMicrosite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/GenerateAIMicrosite',
            protobuf_dot_intelligence__pb2.MicrositeRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.MicrositeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateSalesConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/GenerateSalesConversation',
            protobuf_dot_intelligence__pb2.SalesConversationRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.SalesConversationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AnalyzeEmotionalResonance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/AnalyzeEmotionalResonance',
            protobuf_dot_intelligence__pb2.EmotionalResonanceRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.EmotionalResonanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AnalyzeCompetitiveDifferentiators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/AnalyzeCompetitiveDifferentiators',
            protobuf_dot_intelligence__pb2.CompetitiveDiffRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.CompetitiveDiffResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SynthesizeMultimodalTestimonial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/intelligence.Intelligence/SynthesizeMultimodalTestimonial',
            protobuf_dot_intelligence__pb2.MultimodalRequest.SerializeToString,
            protobuf_dot_intelligence__pb2.MultimodalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChatStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/intelligence.Intelligence/ChatStream',
            protobuf_dot_intelligence__pb2.ChatMessage.SerializeToString,
            protobuf_dot_intelligence__pb2.ChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessVideoByChunks(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/intelligence.Intelligence/ProcessVideoByChunks',
            protobuf_dot_intelligence__pb2.VideoChunk.SerializeToString,
            protobuf_dot_intelligence__pb2.VideoSummary.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
