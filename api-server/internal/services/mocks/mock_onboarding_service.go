// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/onboarding_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	models "github.com/ifeanyidike/cenphi/internal/models"
)

// MockOnboardingService is a mock of OnboardingService interface.
type MockOnboardingService struct {
	ctrl     *gomock.Controller
	recorder *MockOnboardingServiceMockRecorder
}

// MockOnboardingServiceMockRecorder is the mock recorder for MockOnboardingService.
type MockOnboardingServiceMockRecorder struct {
	mock *MockOnboardingService
}

// NewMockOnboardingService creates a new mock instance.
func NewMockOnboardingService(ctrl *gomock.Controller) *MockOnboardingService {
	mock := &MockOnboardingService{ctrl: ctrl}
	mock.recorder = &MockOnboardingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOnboardingService) EXPECT() *MockOnboardingServiceMockRecorder {
	return m.recorder
}

// OnboardOwner mocks base method.
func (m *MockOnboardingService) OnboardOwner(ctx context.Context, userId uuid.UUID, workspace *models.Workspace, team_member *models.TeamMember) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OnboardOwner", ctx, userId, workspace, team_member)
	ret0, _ := ret[0].(error)
	return ret0
}

// OnboardOwner indicates an expected call of OnboardOwner.
func (mr *MockOnboardingServiceMockRecorder) OnboardOwner(ctx, userId, workspace, team_member interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnboardOwner", reflect.TypeOf((*MockOnboardingService)(nil).OnboardOwner), ctx, userId, workspace, team_member)
}
