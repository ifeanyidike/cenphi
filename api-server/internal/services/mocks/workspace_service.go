// Code generated by mockery v2.53.1. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/ifeanyidike/cenphi/internal/models"
	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// WorkspaceService is an autogenerated mock type for the WorkspaceService type
type WorkspaceService struct {
	mock.Mock
}

// CreateWorkspace provides a mock function with given fields: ctx, workspace
func (_m *WorkspaceService) CreateWorkspace(ctx context.Context, workspace *models.Workspace) error {
	ret := _m.Called(ctx, workspace)

	if len(ret) == 0 {
		panic("no return value specified for CreateWorkspace")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.Workspace) error); ok {
		r0 = rf(ctx, workspace)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteWorkspace provides a mock function with given fields: ctx, id
func (_m *WorkspaceService) DeleteWorkspace(ctx context.Context, id uuid.UUID) error {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for DeleteWorkspace")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetWorkspace provides a mock function with given fields: ctx, id
func (_m *WorkspaceService) GetWorkspace(ctx context.Context, id uuid.UUID) (*models.Workspace, error) {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for GetWorkspace")
	}

	var r0 *models.Workspace
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) (*models.Workspace, error)); ok {
		return rf(ctx, id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) *models.Workspace); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Workspace)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateWorkspace provides a mock function with given fields: ctx, id, updates
func (_m *WorkspaceService) UpdateWorkspace(ctx context.Context, id uuid.UUID, updates map[string]interface{}) error {
	ret := _m.Called(ctx, id, updates)

	if len(ret) == 0 {
		panic("no return value specified for UpdateWorkspace")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, map[string]interface{}) error); ok {
		r0 = rf(ctx, id, updates)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWorkspaceService creates a new instance of WorkspaceService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWorkspaceService(t interface {
	mock.TestingT
	Cleanup(func())
}) *WorkspaceService {
	mock := &WorkspaceService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
