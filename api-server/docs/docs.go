// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://example.com/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Returns the health status of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Healthy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unhealthy",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Fetch a user by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workspaces": {
            "get": {
                "description": "Fetch a workspace by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_models.Workspace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new workspace.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Create Workspace",
                "parameters": [
                    {
                        "description": "Workspace data",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_models.Workspace"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Workspace created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workspaces/{id}": {
            "delete": {
                "description": "Delete workspace using the provided path parameter ` + "`" + `id` + "`" + `.",
                "tags": [
                    "Workspaces"
                ],
                "summary": "Delete workspace by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the workspace to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_ifeanyidike_cenphi_internal_models.BrandingSettings": {
            "type": "object",
            "required": [
                "logo_url",
                "primary_color"
            ],
            "properties": {
                "logo_url": {
                    "type": "string"
                },
                "primary_color": {
                    "type": "string"
                }
            }
        },
        "github_com_ifeanyidike_cenphi_internal_models.IntegrationSettings": {
            "type": "object",
            "properties": {
                "google_analytics_id": {
                    "type": "string"
                },
                "slack_webhook_url": {
                    "type": "string"
                }
            }
        },
        "github_com_ifeanyidike_cenphi_internal_models.Plan": {
            "type": "string",
            "enum": [
                "free",
                "basic",
                "pro",
                "enterprise"
            ],
            "x-enum-varnames": [
                "PlanFree",
                "PlanBasic",
                "PlanPro",
                "PlanEnterprise"
            ]
        },
        "github_com_ifeanyidike_cenphi_internal_models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "firebase_uid": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_active": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "permissions": {},
                "settings": {},
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_ifeanyidike_cenphi_internal_models.Workspace": {
            "type": "object",
            "required": [
                "name",
                "plan"
            ],
            "properties": {
                "analytics_settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "branding_settings": {
                    "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_models.BrandingSettings"
                },
                "created_at": {
                    "type": "string"
                },
                "custom_domain": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "integration_settings": {
                    "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_models.IntegrationSettings"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "plan": {
                    "enum": [
                        "free",
                        "basic",
                        "pro",
                        "enterprise"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_ifeanyidike_cenphi_internal_models.Plan"
                        }
                    ]
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "updated_at": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "github_com_ifeanyidike_cenphi_internal_utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Cenphi API",
	Description:      "API documentation for Cenphi.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
